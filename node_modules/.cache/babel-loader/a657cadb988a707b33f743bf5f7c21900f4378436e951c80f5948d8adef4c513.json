{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anves\\\\sudip\\\\Docstorage-Frontend\\\\src\\\\Pages\\\\Employee\\\\Upload\\\\upload_s3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { backend_url } from '../../../Components/configurations';\nimport './upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadFileToS3 = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [textValue, setTextValue] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef(null);\n  const handleKeyDown = event => {\n    // Check if the pressed key is space\n    if (event.key === ' ') {\n      event.preventDefault(); // Prevent entering space in the input\n      alert(\"You can't press space in consumer number\");\n    }\n  };\n  const handleTextChange = event => {\n    const inputValue = event.target.value;\n    if (!isNaN(inputValue)) {\n      setTextValue(inputValue);\n    } else {\n      alert(\"Please enter a number\");\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    console.log(file);\n    if (file === undefined) {\n      setSelectedFile(null);\n    } else {\n      setSelectedFile(file);\n    }\n  };\n  const clearInputs = () => {\n    setSelectedFile(null);\n    setTextValue('');\n    setUploadProgress(0);\n    fileInputRef.current.value = null;\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (selectedFile === null) {\n      alert(\"Please upload the file\");\n      return;\n    }\n    if (textValue === '') {\n      alert(\"Please enter a consumer id\");\n      return;\n    }\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('pdf_file', selectedFile);\n      formData.append('consumer_number', textValue);\n      try {\n        const accessToken = localStorage.getItem('access_token');\n        const response = await axios.post(`${backend_url}user/store_pdf/`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${accessToken}`\n          },\n          onUploadProgress: progressEvent => {\n            const progress = Math.round(progressEvent.loaded / progressEvent.total * 100);\n            setUploadProgress(progress);\n          }\n        });\n        console.log(response);\n        if (response.status === 200) {\n          alert(\"PDF Uploaded successfully\");\n          clearInputs();\n          console.log('PDF uploaded successfully');\n        } else if (response.status === 403) {\n          alert(\"Consumer Number is already present\");\n          clearInputs();\n        } else {\n          console.error('Failed to upload PDF');\n          clearInputs();\n        }\n      } catch (error) {\n        const status_code = error['response']['status'];\n        if (status_code === 403) {\n          alert(\"Consumer is already present\");\n          clearInputs();\n        } else {\n          alert(\"failed to upload PDF\");\n          clearInputs();\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"d-flex justify-content-center pb-5 fw-light\",\n      children: \"Upload Consumer's Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-form text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"upload-pdf-text-input\",\n          className: \"p-2 w-5\",\n          children: \"Consumer No:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"upload-pdf-text-input\",\n          className: \"form-control w-50\",\n          value: textValue,\n          onChange: handleTextChange,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center align-items-center p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"p-2 w-5 d-flex justify-content-start\",\n          children: \"Upload File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          id: \"file-input\",\n          className: \"form-control fileUploadButton\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary pt-2\",\n          onClick: handleFormSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadFileToS3, \"9SyVs1O+F1Qm1owLBG483Gw1vW8=\");\n_c = UploadFileToS3;\nexport default UploadFileToS3;\nvar _c;\n$RefreshReg$(_c, \"UploadFileToS3\");","map":{"version":3,"names":["React","useState","useRef","axios","backend_url","jsxDEV","_jsxDEV","UploadFileToS3","_s","selectedFile","setSelectedFile","textValue","setTextValue","uploadProgress","setUploadProgress","fileInputRef","handleKeyDown","event","key","preventDefault","alert","handleTextChange","inputValue","target","value","isNaN","handleFileChange","file","files","console","log","undefined","clearInputs","current","handleFormSubmit","formData","FormData","append","accessToken","localStorage","getItem","response","post","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","status","error","status_code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onKeyDown","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anves/sudip/Docstorage-Frontend/src/Pages/Employee/Upload/upload_s3.jsx"],"sourcesContent":["import React, { useState,useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { backend_url } from '../../../Components/configurations';\r\n\r\nimport './upload.css';\r\n\r\nconst UploadFileToS3 = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [textValue, setTextValue] = useState('');\r\n    const [uploadProgress, setUploadProgress] = useState(0);\r\n    const fileInputRef = useRef(null);\r\n\r\n    const handleKeyDown = (event) => {\r\n        // Check if the pressed key is space\r\n        if (event.key === ' ') {\r\n          event.preventDefault(); // Prevent entering space in the input\r\n          alert(\"You can't press space in consumer number\");\r\n        }\r\n      };\r\n\r\n    const handleTextChange = (event) => {\r\n        const inputValue = event.target.value;\r\n        if (!isNaN(inputValue)) {\r\n            setTextValue(inputValue);\r\n        } else{\r\n            alert(\"Please enter a number\");\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        console.log(file);\r\n        if (file === undefined){\r\n            setSelectedFile(null)\r\n        } else{\r\n            setSelectedFile(file);\r\n        }\r\n    };\r\n\r\n    const clearInputs = () => {\r\n        setSelectedFile(null);\r\n        setTextValue('');\r\n        setUploadProgress(0);\r\n        fileInputRef.current.value = null;\r\n    }\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (selectedFile === null){\r\n            alert(\"Please upload the file\");\r\n            return;\r\n        }\r\n        if (textValue === '') {\r\n            alert(\"Please enter a consumer id\");\r\n            return;\r\n        }\r\n\r\n        if (selectedFile) {\r\n            const formData = new FormData();\r\n            formData.append('pdf_file', selectedFile);\r\n            formData.append('consumer_number', textValue);\r\n\r\n            try {\r\n                const accessToken = localStorage.getItem('access_token')\r\n\r\n                const response = await axios.post(`${backend_url}user/store_pdf/`, formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                    },\r\n                    onUploadProgress: (progressEvent) => {\r\n                        const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\r\n                        setUploadProgress(progress);\r\n                    },\r\n                });\r\n                console.log(response)\r\n\r\n                if (response.status === 200) {\r\n                    alert(\"PDF Uploaded successfully\");\r\n                    clearInputs();\r\n                    console.log('PDF uploaded successfully');\r\n                } else if(response.status === 403){\r\n                    alert(\"Consumer Number is already present\");\r\n                    clearInputs();\r\n                } else {\r\n                    console.error('Failed to upload PDF');\r\n                    clearInputs();\r\n                }\r\n            } catch (error) {\r\n                const status_code = error['response']['status'];\r\n                if (status_code === 403){\r\n                    alert(\"Consumer is already present\");\r\n                    clearInputs();\r\n                } else{\r\n                    alert(\"failed to upload PDF\");\r\n                    clearInputs();\r\n                }\r\n                \r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='upload-box'>\r\n            <h3 className='d-flex justify-content-center pb-5 fw-light'>Upload Consumer's Documents</h3>\r\n            <div className=\"file-upload-form text-center\">\r\n                <div className=\"form-group d-flex justify-content-center align-items-center\">\r\n                    <label htmlFor=\"upload-pdf-text-input\" className='p-2 w-5'>Consumer No:</label>\r\n                    <input type=\"text\" id=\"upload-pdf-text-input\" className=\"form-control w-50\" value={textValue} onChange={handleTextChange} onKeyDown={handleKeyDown}/>\r\n                </div>\r\n                <div className=\"form-group d-flex justify-content-center align-items-center p-4\">\r\n                    <label htmlFor=\"file-input\" className='p-2 w-5 d-flex justify-content-start'>Upload File:</label>\r\n                    <input ref={fileInputRef} type=\"file\" id=\"file-input\" className=\"form-control fileUploadButton\" onChange={handleFileChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary pt-2\" onClick={handleFormSubmit}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadFileToS3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}