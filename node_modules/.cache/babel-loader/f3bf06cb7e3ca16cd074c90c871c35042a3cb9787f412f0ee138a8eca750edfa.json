{"ast":null,"code":"var _jsxFileName = \"/home/sudip/Docstorage-Frontend/src/Pages/Employee/History/History.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { backend_url } from \"../../../Components/configurations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  useEffect(() => {\n    const handleFetch = async () => {\n      try {\n        const accessToken = localStorage.getItem('access_token');\n        const user = localStorage.getItem('user');\n        const response = await fetch(`${backend_url}user/account_status/?user=${user}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        }).then(response => response.json()).then(data => {\n          setRowData(data);\n        });\n      } catch (error) {\n        console.log('Error occurred', error);\n      }\n    };\n    handleFetch(); // Call handleFetch when component mounts or dependencies change\n    console.log(rowData);\n  }, []); // Empty dependency array ensures this effect runs only once after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rowData.map(rows => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: rows.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(History, \"xN2bMZkjhWQ3a2zx1ObaCbGfPzo=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","backend_url","jsxDEV","_jsxDEV","History","_s","rowData","setRowData","handleFetch","accessToken","localStorage","getItem","user","response","fetch","method","headers","then","json","data","error","console","log","children","map","rows","count","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sudip/Docstorage-Frontend/src/Pages/Employee/History/History.js"],"sourcesContent":["import React,{ useState, useEffect } from \"react\";\n\nimport { backend_url } from \"../../../Components/configurations\";\n\nconst History = () => {\n    const [rowData, setRowData] = useState([])\n\n    useEffect(() => {\n        const handleFetch = async () => {\n            try {\n                const accessToken = localStorage.getItem('access_token');\n                const user = localStorage.getItem('user');\n\n                const response = await fetch(`${backend_url}user/account_status/?user=${user}`, {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': `Bearer ${accessToken}`,\n                    }\n                })\n                .then(response => response.json())\n                .then(data => {setRowData(data)})\n                \n            } catch (error) {\n                console.log('Error occurred', error);\n            }\n        };\n\n        handleFetch(); // Call handleFetch when component mounts or dependencies change\n        console.log(rowData);\n\n    },[]); // Empty dependency array ensures this effect runs only once after initial render\n\n\n    return(\n        <div>\n            {rowData.map((rows) => {\n                <div>{rows.count}</div>\n            })}\n        </div>\n    )\n}\n\nexport default History;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAEjD,SAASC,WAAW,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QACxD,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;QAEzC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,WAAY,6BAA4BW,IAAK,EAAC,EAAE;UAC5EG,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,eAAe,EAAG,UAASP,WAAY;UAC3C;QACJ,CAAC,CAAC,CACDQ,IAAI,CAACJ,QAAQ,IAAIA,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACE,IAAI,IAAI;UAACZ,UAAU,CAACY,IAAI,CAAC;QAAA,CAAC,CAAC;MAErC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;MACxC;IACJ,CAAC;IAEDZ,WAAW,CAAC,CAAC,CAAC,CAAC;IACfa,OAAO,CAACC,GAAG,CAAChB,OAAO,CAAC;EAExB,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC;;EAGP,oBACIH,OAAA;IAAAoB,QAAA,EACKjB,OAAO,CAACkB,GAAG,CAAEC,IAAI,IAAK;MACnB,aAAAtB,OAAA;QAAAoB,QAAA,EAAME,IAAI,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAC3B,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAzB,EAAA,CApCKD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}