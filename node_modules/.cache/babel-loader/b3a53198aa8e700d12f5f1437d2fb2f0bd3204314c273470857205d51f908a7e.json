{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anves\\\\sudip\\\\Docstorage-Frontend\\\\src\\\\Pages\\\\Employee\\\\GetConsumerData\\\\GetConsumerDataFromS3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { backend_url } from \"../../../Components/configurations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetConsumerDataFromS3 = () => {\n  _s();\n  const [consumerNumber, setConsumerNumber] = useState('');\n  const handleKeyDown = event => {\n    // Check if the pressed key is space\n    if (event.key === ' ') {\n      event.preventDefault(); // Prevent entering space in the input\n      alert(\"You can't press space in consumer number\");\n    }\n  };\n  const handleTextChange = event => {\n    const inputValue = event.target.value;\n    if (!isNaN(inputValue)) {\n      setConsumerNumber(inputValue);\n    } else {\n      alert(\"Please enter a number\");\n    }\n  };\n  const handleFetchPDF = async () => {\n    try {\n      const response = await fetch(`${backend_url}user/retreive_pdf/?consumer_number=${consumerNumber}`, {\n        method: 'GET'\n      });\n      console.log(consumerNumber);\n      if (!response.ok) {\n        // Handle non-successful responses\n        console.log(response);\n        if (response.status_code == 400) {\n          alert(\"Consumer number not present\");\n          return;\n        }\n        const errorMessage = await response.text();\n        throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\n      }\n      const responseData = await response.json();\n      console.log(responseData.url);\n    } catch (error) {\n      // Handle errors\n      console.error('Error retrieving PDF:', error);\n      throw error; // Propagate the error to the caller\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"d-flex justify-content-center pb-5 fw-light\",\n      children: \"Get Consumer's Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-form text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"get-pdf-text-input\",\n          className: \"p-2 w-5\",\n          children: \"Consumer No:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"get-pdf-text-input\",\n          className: \"form-control w-50\",\n          value: consumerNumber,\n          onChange: handleTextChange,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-5\",\n          onClick: handleFetchPDF,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(GetConsumerDataFromS3, \"MjVQPRS3kAlzvLbhYeR1HT5ojL0=\");\n_c = GetConsumerDataFromS3;\nexport default GetConsumerDataFromS3;\nvar _c;\n$RefreshReg$(_c, \"GetConsumerDataFromS3\");","map":{"version":3,"names":["React","useEffect","useState","axios","backend_url","jsxDEV","_jsxDEV","GetConsumerDataFromS3","_s","consumerNumber","setConsumerNumber","handleKeyDown","event","key","preventDefault","alert","handleTextChange","inputValue","target","value","isNaN","handleFetchPDF","response","fetch","method","console","log","ok","status_code","errorMessage","text","Error","status","responseData","json","url","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anves/sudip/Docstorage-Frontend/src/Pages/Employee/GetConsumerData/GetConsumerDataFromS3.jsx"],"sourcesContent":["import React,{ useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { backend_url } from \"../../../Components/configurations\";\r\n\r\nconst GetConsumerDataFromS3 = () => {\r\n    const [consumerNumber, setConsumerNumber] = useState('');\r\n\r\n    const handleKeyDown = (event) => {\r\n        // Check if the pressed key is space\r\n        if (event.key === ' ') {\r\n          event.preventDefault(); // Prevent entering space in the input\r\n          alert(\"You can't press space in consumer number\");\r\n        }\r\n      };\r\n\r\n    const handleTextChange = (event) => {\r\n        const inputValue = event.target.value;\r\n        if (!isNaN(inputValue)) {\r\n            setConsumerNumber(inputValue);\r\n        } else{\r\n            alert(\"Please enter a number\");\r\n        }\r\n    };\r\n\r\n    const handleFetchPDF = async () => {\r\n        try {\r\n            const response = await fetch(`${backend_url}user/retreive_pdf/?consumer_number=${consumerNumber}`, {\r\n              method: 'GET',\r\n            });\r\n            console.log(consumerNumber)\r\n        \r\n            if (!response.ok) {\r\n              // Handle non-successful responses\r\n              console.log(response)\r\n              if (response.status_code == 400){\r\n                alert(\"Consumer number not present\")\r\n                return\r\n              }\r\n              const errorMessage = await response.text();\r\n              throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\r\n            }\r\n        \r\n            const responseData = await response.json();\r\n            console.log(responseData.url);\r\n          } catch (error) {\r\n            // Handle errors\r\n            console.error('Error retrieving PDF:', error);\r\n            throw error; // Propagate the error to the caller\r\n          }        \r\n    };\r\n\r\n\r\n    return (\r\n        <div className='upload-box'>\r\n            <h3 className='d-flex justify-content-center pb-5 fw-light'>Get Consumer's Details</h3>\r\n            <div className=\"file-upload-form text-center\">\r\n                <div className=\"form-group d-flex justify-content-center align-items-center\">\r\n                    <label htmlFor=\"get-pdf-text-input\" className='p-2 w-5'>Consumer No:</label>\r\n                    <input type=\"text\" id=\"get-pdf-text-input\" className=\"form-control w-50\" value={consumerNumber} onChange={handleTextChange} onKeyDown={handleKeyDown}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary mt-5\" onClick={handleFetchPDF}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetConsumerDataFromS3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}