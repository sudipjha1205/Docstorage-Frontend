{"ast":null,"code":"var _jsxFileName = \"/home/sudip/DocStorage/src/Pages/Employee/Upload/upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport './upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadForm = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [textValue, setTextValue] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef(null);\n  const handleTextChange = event => {\n    setTextValue(event.target.value);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    console.log(file);\n    setSelectedFile(file);\n  };\n  const clearInputs = () => {\n    setSelectedFile(null);\n    setTextValue('');\n    setUploadProgress(0);\n    fileInputRef.current.value = null;\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (selectedFile === null) {\n      alert(\"Please upload the file\");\n      fileInputRef.current.value = null;\n      return;\n    }\n    if (textValue === '') {\n      alert(\"Please enter a consumer id\");\n      fileInputRef.current.value = null;\n      return;\n    }\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('pdfFile', selectedFile);\n      formData.append('consumerNo', textValue);\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/user/api/upload-pdf/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progressEvent => {\n            const progress = Math.round(progressEvent.loaded / progressEvent.total * 100);\n            setUploadProgress(progress);\n          }\n        });\n        console.log(response);\n        if (response.status === 200) {\n          alert(\"PDF Uploaded successfully\");\n          clearInputs();\n          console.log('PDF uploaded successfully');\n        } else if (response.status === 403) {\n          alert(\"Consumer Number is already present\");\n          clearInputs();\n        } else {\n          console.error('Failed to upload PDF');\n          clearInputs();\n        }\n      } catch (error) {\n        const status_code = error['response']['status'];\n        if (status_code === 403) {\n          alert(\"Consumer is already present\");\n          clearInputs();\n        } else {\n          alert(\"failed to upload PDF\");\n          clearInputs();\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-form text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text-input\",\n          className: \"p-2 w-5\",\n          children: \"Consumer No:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"text-input\",\n          className: \"form-control w-50\",\n          value: textValue,\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center align-items-center p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"p-2 w-5 d-flex justify-content-start\",\n          children: \"Upload File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          id: \"file-input\",\n          className: \"form-control w-auto fileUploadButton\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleFormSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploadForm, \"9SyVs1O+F1Qm1owLBG483Gw1vW8=\");\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","FileUploadForm","_s","selectedFile","setSelectedFile","textValue","setTextValue","uploadProgress","setUploadProgress","fileInputRef","handleTextChange","event","target","value","handleFileChange","file","files","console","log","clearInputs","current","handleFormSubmit","preventDefault","alert","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","status","error","status_code","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","ref","onClick","_c","$RefreshReg$"],"sources":["/home/sudip/DocStorage/src/Pages/Employee/Upload/upload.jsx"],"sourcesContent":["import React, { useState,useRef } from 'react';\nimport axios from 'axios';\n\nimport './upload.css';\n\nconst FileUploadForm = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [textValue, setTextValue] = useState('');\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const fileInputRef = useRef(null);\n\n    const handleTextChange = (event) => {\n        setTextValue(event.target.value);\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        console.log(file);\n        setSelectedFile(file);\n    };\n\n    const clearInputs = () => {\n        setSelectedFile(null);\n        setTextValue('');\n        setUploadProgress(0);\n        fileInputRef.current.value = null;\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        if (selectedFile === null){\n            alert(\"Please upload the file\");\n            fileInputRef.current.value = null;\n            return;\n        }\n        if (textValue === ''){\n            alert(\"Please enter a consumer id\");\n            fileInputRef.current.value = null;\n            return;\n        }\n\n        if (selectedFile) {\n            const formData = new FormData();\n            formData.append('pdfFile', selectedFile);\n            formData.append('consumerNo', textValue);\n\n            try {\n                const response = await axios.post('http://127.0.0.1:8000/user/api/upload-pdf/', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    },\n                    onUploadProgress: (progressEvent) => {\n                        const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\n                        setUploadProgress(progress);\n                    },\n                });\n                console.log(response)\n\n                if (response.status === 200) {\n                    alert(\"PDF Uploaded successfully\");\n                    clearInputs();\n                    console.log('PDF uploaded successfully');\n                } else if(response.status === 403){\n                    alert(\"Consumer Number is already present\");\n                    clearInputs();\n                } else {\n                    console.error('Failed to upload PDF');\n                    clearInputs();\n                }\n            } catch (error) {\n                const status_code = error['response']['status'];\n                if (status_code === 403){\n                    alert(\"Consumer is already present\");\n                    clearInputs();\n                } else{\n                    alert(\"failed to upload PDF\");\n                    clearInputs();\n                }\n                \n            }\n        }\n    };\n\n    return (\n        <div className='upload-box'>\n            <div className=\"file-upload-form text-center\">\n                <div className=\"form-group d-flex justify-content-center align-items-center\">\n                    <label htmlFor=\"text-input\" className='p-2 w-5'>Consumer No:</label>\n                    <input type=\"text\" id=\"text-input\" className=\"form-control w-50\" value={textValue} onChange={handleTextChange} />\n                </div>\n                <div className=\"form-group d-flex justify-content-center align-items-center p-4\">\n                    <label htmlFor=\"file-input\" className='p-2 w-5 d-flex justify-content-start'>Upload File:</label>\n                    <input ref={fileInputRef} type=\"file\" id=\"file-input\" className=\"form-control w-auto fileUploadButton\" onChange={handleFileChange} />\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\" onClick={handleFormSubmit}>Submit</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FileUploadForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}