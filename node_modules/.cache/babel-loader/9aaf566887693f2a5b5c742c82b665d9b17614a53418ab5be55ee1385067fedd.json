{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useAuth}from\"../../Components/Authentication/AuthContext\";import\"./login.css\";// Ensure that your CSS file is correctly linked\nimport show from\"../../Illustrations/show.png\";import hide from\"../../Illustrations/hide.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const{login}=useAuth();const[password,setPassword]=useState('');const[showPassword,setShowPassword]=useState(false);const[formData,setFormData]=useState({email:'',password:''});const[error,setError]=useState('');const[csrfToken,setCsrfToken]=useState('');const navigate=useNavigate();const handleTogglePassword=()=>{setShowPassword(!showPassword);};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleSubmit=async e=>{e.preventDefault();const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;const isValidEmail=emailRegex.test(formData['email']);if(isValidEmail===false){alert('Please enter a valid Email ID');setFormData({email:'',password:''});return;}login();// Add the CSRF token to the headers\nconst headers={'Content-Type':'application/json','X-CSRFToken':csrfToken};try{console.log('Form Data:',formData);console.log('Headers:',headers);const response=await fetch('https://docstorage-server-e48dce0ce08a.herokuapp.com/user/login/',{method:'post',headers:headers,body:JSON.stringify(formData)});console.log(response);const data=await response.json();console.log(data);if(data['error']=='Invalid credentials'){alert('Invalid credentials or User does not exist');return;}const access_token=data['access_token'];const refresh_token=data['refresh_token'];localStorage.setItem('access_token',access_token);localStorage.setItem('refresh_token',refresh_token);navigate(\"/Employee/homepage\");}catch(error){console.error('Registration failed',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Login Form\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"form-style\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",className:\"label-style\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-style\",type:\"text\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"label\",{className:\"label-style\",htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-toggle\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',className:\"input-style\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{className:\"password-button-style\",type:\"button\",onClick:handleTogglePassword,children:showPassword?/*#__PURE__*/_jsx(\"img\",{src:show,alt:\"Show Password\",width:\"20px\",height:\"20px\"}):/*#__PURE__*/_jsx(\"img\",{src:hide,alt:\"Hide Password\",width:\"20px\",height:\"20px\"})})]}),/*#__PURE__*/_jsx(\"label\",{className:\"pass-instruction\",children:\"Password should contain an Uppercase, lowercase, number, special character and of length 8 least.\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button-style\",onClick:handleSubmit,children:\"Login\"})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","useAuth","show","hide","jsx","_jsx","jsxs","_jsxs","Login","login","password","setPassword","showPassword","setShowPassword","formData","setFormData","email","error","setError","csrfToken","setCsrfToken","navigate","handleTogglePassword","handleChange","e","target","name","value","handleSubmit","preventDefault","emailRegex","isValidEmail","test","alert","headers","console","log","response","fetch","method","body","JSON","stringify","data","json","access_token","refresh_token","localStorage","setItem","children","className","htmlFor","type","id","onChange","required","onClick","src","alt","width","height"],"sources":["/home/sudip/DocStorage/src/Pages/Signing/login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../../Components/Authentication/AuthContext\";\n\nimport \"./login.css\"; // Ensure that your CSS file is correctly linked\nimport show from \"../../Illustrations/show.png\";\nimport hide from \"../../Illustrations/hide.png\";\n\nconst Login = () => {\n\n  const { login } = useAuth();\n\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [error, setError] = useState('');\n  const [csrfToken, setCsrfToken] = useState('');\n  const navigate = useNavigate();\n\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValidEmail = emailRegex.test(formData['email']);\n\n    if (isValidEmail === false){\n      alert('Please enter a valid Email ID');\n      setFormData({email: '', password: ''});\n      return;\n    }\n\n    login();\n\n    // Add the CSRF token to the headers\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrfToken,\n    };\n\n    try {\n      console.log('Form Data:', formData);\n      console.log('Headers:', headers);\n\n      const response = await fetch('https://docstorage-server-e48dce0ce08a.herokuapp.com/user/login/', {\n        method: 'post',\n        headers: headers,\n        body: JSON.stringify(formData),\n      });\n      console.log(response)\n\n      const data = await response.json();\n      console.log(data);\n\n      if (data['error'] == 'Invalid credentials'){\n        alert('Invalid credentials or User does not exist');\n        return\n      }\n\n      const access_token = data['access_token']\n      const refresh_token = data['refresh_token']\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('refresh_token', refresh_token);\n\n      navigate(\"/Employee/homepage\");\n      \n    } catch (error) {\n      console.error('Registration failed', error);\n    }\n  };\n\n  return (\n    <div>\n        <h3>Login Form</h3>\n            <form className=\"form-style\">\n              <label htmlFor=\"username\" className=\"label-style\">\n                Email:\n              </label>\n              <input className=\"input-style\" type=\"text\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n\n              <label className=\"label-style\" htmlFor=\"password\">\n                Password:\n              </label>\n              <div className=\"password-toggle\">\n                <input type={showPassword ? 'text' : 'password'} className=\"input-style\" id=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n                <button className=\"password-button-style\" type=\"button\" onClick={handleTogglePassword}>\n                  {showPassword ? <img src={show} alt=\"Show Password\" width='20px' height='20px' /> : <img src={hide} alt=\"Hide Password\" width='20px' height='20px' />}\n                </button>\n              </div>\n              <label className=\"pass-instruction\">Password should contain an Uppercase, lowercase, number, special character and of length 8 least.</label>\n              <button type=\"submit\" className=\"button-style\" onClick={handleSubmit}>\n                Login\n              </button>\n            </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}