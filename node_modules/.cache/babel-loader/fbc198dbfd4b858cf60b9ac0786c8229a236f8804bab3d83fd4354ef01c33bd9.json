{"ast":null,"code":"import axios from\"axios\";import React,{useState,useEffect}from\"react\";import{useNavigate,Redirect}from'react-router-dom';import\"./login.css\";// Ensure that your CSS file is correctly linked\nimport show from\"../../Illustrations/show.png\";import hide from\"../../Illustrations/hide.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Registration=()=>{const[password,setPassword]=useState('');const[register_confirmpassword,setRegister_ConfirmPassword]=useState('');const[showPassword,setShowPassword]=useState(false);const[showConfirmPassword,setShowConfirmPassword]=useState(false);const[formData,setFormData]=useState({email:'',password:''});const[error,setError]=useState('');const[csrfToken,setCsrfToken]=useState('');const navigate=useNavigate();useEffect(()=>{// Fetch CSRF token from the server\nconst fetchCsrfToken=async()=>{try{const response=await axios.get('http://localhost:8000/user/csrf_token/');setCsrfToken(response.data.csrfToken);}catch(error){console.error('Failed to fetch CSRF token',error);}};fetchCsrfToken();},[]);// Empty dependency array ensures this effect runs only once\nconst handleTogglePassword=()=>{setShowPassword(!showPassword);};const handleToggleConfirmPassword=()=>{setShowConfirmPassword(!showConfirmPassword);};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleConfirmPassword=e=>{setRegister_ConfirmPassword(e.target.value);};const handleSubmit=async e=>{e.preventDefault();const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;const isValidEmail=emailRegex.test(formData['email']);if(isValidEmail===false){alert('Please enter a valid Email ID');setFormData({email:'',password:''});setRegister_ConfirmPassword('');return;}const passwordRegex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;// Check if the password matches the regex\nconst isValidPassword=passwordRegex.test(formData['password']);if(isValidPassword===false){alert(\"Please give a valid password\");setFormData({email:formData['email'],password:''});setRegister_ConfirmPassword('');return;}if(formData.password!=register_confirmpassword){setError(\"Passwords don't match\");alert(\"Password doesn't matches\");return;}// Add the CSRF token to the headers\nconst headers={'Content-Type':'application/json','X-CSRFToken':csrfToken};try{console.log('Form Data:',formData);console.log('Headers:',headers);const response=await fetch('http://localhost:8000/user/registration/',{method:'post',headers:headers,body:JSON.stringify(formData)});console.log(response);if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const data=await response.json();console.log(data);if(response['statusText']===\"OK\"){alert(\"Registered Successfully\");setFormData({email:'',password:''});setRegister_ConfirmPassword('');}}catch(error){alert(\"User already exists\");console.error('Registration failed',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Registration Form\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"form-style\",children:[error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"label-style\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-style\",type:\"text\",id:\"email\",name:\"email\",value:formData['email'],onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"label\",{className:\"label-style\",htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-toggle\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',className:\"input-style\",id:\"password\",name:\"password\",value:formData['password'],onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{className:\"password-button-style\",type:\"button\",onClick:handleTogglePassword,children:showPassword?/*#__PURE__*/_jsx(\"img\",{src:show,alt:\"Show Password\",width:\"20px\",height:\"20px\"}):/*#__PURE__*/_jsx(\"img\",{src:hide,alt:\"Hide Password\",width:\"20px\",height:\"20px\"})})]}),/*#__PURE__*/_jsx(\"label\",{className:\"label-style\",htmlFor:\"register_confirmpassword\",children:\"Confirm Password:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-toggle\",children:[/*#__PURE__*/_jsx(\"input\",{type:showConfirmPassword?'text':'password',className:\"input-style\",id:\"register_confirmpassword\",name:\"register_confirmpassword\",value:register_confirmpassword,onChange:handleConfirmPassword,required:true}),/*#__PURE__*/_jsx(\"button\",{className:\"password-button-style\",type:\"button\",onClick:handleToggleConfirmPassword,children:showConfirmPassword?/*#__PURE__*/_jsx(\"img\",{src:show,alt:\"Show Password\",width:\"20px\",height:\"20px\"}):/*#__PURE__*/_jsx(\"img\",{src:hide,alt:\"Hide Password\",width:\"20px\",height:\"20px\"})})]}),/*#__PURE__*/_jsx(\"label\",{className:\"pass-instruction\",children:\"Password should contain an Uppercase, lowercase, number, special character and of length 8 least.\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button-style\",onClick:handleSubmit,children:\"Submit\"})]})]});};export default Registration;","map":{"version":3,"names":["axios","React","useState","useEffect","useNavigate","Redirect","show","hide","jsx","_jsx","jsxs","_jsxs","Registration","password","setPassword","register_confirmpassword","setRegister_ConfirmPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","formData","setFormData","email","error","setError","csrfToken","setCsrfToken","navigate","fetchCsrfToken","response","get","data","console","handleTogglePassword","handleToggleConfirmPassword","handleChange","e","target","name","value","handleConfirmPassword","handleSubmit","preventDefault","emailRegex","isValidEmail","test","alert","passwordRegex","isValidPassword","headers","log","fetch","method","body","JSON","stringify","ok","Error","concat","status","json","children","className","style","color","htmlFor","type","id","onChange","required","onClick","src","alt","width","height"],"sources":["/home/sudip/DocStorage/src/Pages/Signing/registration.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate,Redirect } from 'react-router-dom';\nimport \"./login.css\"; // Ensure that your CSS file is correctly linked\nimport show from \"../../Illustrations/show.png\";\nimport hide from \"../../Illustrations/hide.png\";\n\nconst Registration = () => {\n  const [password, setPassword] = useState('');\n  const [register_confirmpassword, setRegister_ConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [error, setError] = useState('');\n  const [csrfToken, setCsrfToken] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch CSRF token from the server\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/user/csrf_token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('Failed to fetch CSRF token', error);\n      }\n    };\n\n    fetchCsrfToken();\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleToggleConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleConfirmPassword = (e) => {\n    setRegister_ConfirmPassword(e.target.value);\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValidEmail = emailRegex.test(formData['email']);\n\n    if (isValidEmail === false){\n      alert('Please enter a valid Email ID');\n      setFormData({email: '', password: ''});\n      setRegister_ConfirmPassword('');\n      return;\n    }\n\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n\n    // Check if the password matches the regex\n    const isValidPassword = passwordRegex.test(formData['password']);\n\n    if (isValidPassword === false){\n      alert(\"Please give a valid password\");\n      setFormData({email: formData['email'], password: ''});\n      setRegister_ConfirmPassword('');\n      return;\n    }\n\n    if (formData.password != register_confirmpassword){\n      setError(\"Passwords don't match\");\n      alert(\"Password doesn't matches\");\n      return\n    }\n\n    // Add the CSRF token to the headers\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrfToken,\n    };\n\n    try {\n      console.log('Form Data:', formData);\n      console.log('Headers:', headers);\n\n      const response = await fetch('http://localhost:8000/user/registration/', {\n        method: 'post',\n        headers: headers,\n        body: JSON.stringify(formData),\n      });\n      console.log(response)\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(data);\n      if (response['statusText'] === \"OK\"){\n        alert(\"Registered Successfully\");\n        setFormData({\n          email: '',\n          password: ''})\n        setRegister_ConfirmPassword('');\n      }\n    } catch (error) {\n      alert(\"User already exists\")\n      console.error('Registration failed', error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Registration Form</h3>\n      <form className=\"form-style\">\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n        <label htmlFor=\"email\" className=\"label-style\">\n          Email:\n        </label>\n        <input className=\"input-style\" type=\"text\" id=\"email\" name=\"email\" value={formData['email']} onChange={handleChange} required />\n\n        <label className=\"label-style\" htmlFor=\"password\">\n          Password:\n        </label>\n        <div className=\"password-toggle\">\n          <input type={showPassword ? 'text' : 'password'} className=\"input-style\" id=\"password\" name=\"password\" value={formData['password']} onChange={handleChange} required />\n          <button className=\"password-button-style\" type=\"button\" onClick={handleTogglePassword}>\n            {showPassword ? <img src={show} alt=\"Show Password\" width='20px' height='20px' /> : <img src={hide} alt=\"Hide Password\" width='20px' height='20px' />}\n          </button>\n        </div>\n        <label className=\"label-style\" htmlFor=\"register_confirmpassword\">\n          Confirm Password:\n        </label>\n        <div className=\"password-toggle\">\n          <input type={showConfirmPassword ? 'text' : 'password'} className=\"input-style\" id=\"register_confirmpassword\" name=\"register_confirmpassword\" value={register_confirmpassword} onChange={handleConfirmPassword} required />\n          <button className=\"password-button-style\" type=\"button\" onClick={handleToggleConfirmPassword}>\n            {showConfirmPassword ? <img src={show} alt=\"Show Password\" width='20px' height='20px' /> : <img src={hide} alt=\"Hide Password\" width='20px' height='20px' />}\n          </button>\n        </div>\n        <label className=\"pass-instruction\">Password should contain an Uppercase, lowercase, number, special character and of length 8 least.</label>\n        <button type=\"submit\" className=\"button-style\" onClick={handleSubmit}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Registration;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}