{"ast":null,"code":"var _jsxFileName = \"/home/sudip/DocStorage/src/Pages/Employee/Upload/upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadForm = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [textValue, setTextValue] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const handleTextChange = event => {\n    setTextValue(event.target.value);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('pdfFile', selectedFile);\n      formData.append('consumerNo', textValue);\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/user/api/upload-pdf/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progressEvent => {\n            const progress = Math.round(progressEvent.loaded / progressEvent.total * 100);\n            setUploadProgress(progress);\n          }\n        });\n        if (response.status === 200) {\n          console.log('PDF uploaded successfully');\n        } else {\n          console.error('Failed to upload PDF');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-form text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text-input\",\n          className: \"p-2 w-5\",\n          children: \"Consumer No:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"text-input\",\n          className: \"form-control w-50\",\n          value: textValue,\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center align-items-center p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"p-2 w-5 d-flex justify-content-start\",\n          children: \"Upload File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file-input\",\n          className: \"form-control w-50 fileUploadButton\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleFormSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upload Progress: \", uploadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: uploadProgress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploadForm, \"2pRteKRWD9Y5W2g9OBvmmzEQBTA=\");\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUploadForm","_s","selectedFile","setSelectedFile","textValue","setTextValue","uploadProgress","setUploadProgress","handleTextChange","event","target","value","handleFileChange","file","files","handleFormSubmit","preventDefault","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","status","console","log","error","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick","max","_c","$RefreshReg$"],"sources":["/home/sudip/DocStorage/src/Pages/Employee/Upload/upload.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport './upload.css';\n\nconst FileUploadForm = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [textValue, setTextValue] = useState('');\n    const [uploadProgress, setUploadProgress] = useState(0);\n\n    const handleTextChange = (event) => {\n        setTextValue(event.target.value);\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        setSelectedFile(file);\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        if (selectedFile) {\n            const formData = new FormData();\n            formData.append('pdfFile', selectedFile);\n            formData.append('consumerNo', textValue);\n\n            try {\n                const response = await axios.post('http://127.0.0.1:8000/user/api/upload-pdf/', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    },\n                    onUploadProgress: (progressEvent) => {\n                        const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\n                        setUploadProgress(progress);\n                    },\n                });\n\n                if (response.status === 200) {\n                    console.log('PDF uploaded successfully');\n                } else {\n                    console.error('Failed to upload PDF');\n                }\n            } catch (error) {\n                console.error('Error:', error);\n            }\n        }\n    };\n\n    return (\n        <div className='upload-box'>\n            <div className=\"file-upload-form text-center\">\n                <div className=\"form-group d-flex justify-content-center align-items-center\">\n                    <label htmlFor=\"text-input\" className='p-2 w-5'>Consumer No:</label>\n                    <input type=\"text\" id=\"text-input\" className=\"form-control w-50\" value={textValue} onChange={handleTextChange} />\n                </div>\n                <div className=\"form-group d-flex justify-content-center align-items-center p-4\">\n                    <label htmlFor=\"file-input\" className='p-2 w-5 d-flex justify-content-start'>Upload File:</label>\n                    <input type=\"file\" id=\"file-input\" className=\"form-control w-50 fileUploadButton\" onChange={handleFileChange} />\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\" onClick={handleFormSubmit}>Submit</button>\n                </div>\n                {uploadProgress > 0 && (\n                    <div className=\"progress-group\">\n                        <p>Upload Progress: {uploadProgress}%</p>\n                        <progress value={uploadProgress} max=\"100\" />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default FileUploadForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}