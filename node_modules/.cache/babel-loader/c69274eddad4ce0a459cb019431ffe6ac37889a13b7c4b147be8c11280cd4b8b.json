{"ast":null,"code":"var _jsxFileName = \"/home/sudip/Docstorage-Frontend/src/Pages/Employee/History/History.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { backend_url } from \"../../../Components/configurations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = () => {\n  _s();\n  const [rowData, setRowData] = useState({});\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(10);\n  const handleFetch = async () => {\n    try {\n      const accessToken = localStorage.getItem('access_token');\n      const user = localStorage.getItem('user');\n      const response = await fetch(`${backend_url}user/account_status/?user=${user}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      setRowData(data);\n      console.log(data); // Check fetched data\n    } catch (error) {\n      console.log('Error occurred', error);\n    }\n  };\n  useEffect(() => {\n    handleFetch(); // Call handleFetch when component mounts\n  }, []); // Empty dependency array ensures this effect runs only once after initial render\n\n  const consumersTable = rowData.all_rows && rowData.all_rows.slice(start, end).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: row.consumer_number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: row.file_key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-5\",\n      onClick: handleFetch,\n      children: \"GET DATA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(History, \"EMU1WoRpcHea5OFy14YmnZQrRVg=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","backend_url","jsxDEV","_jsxDEV","History","_s","rowData","setRowData","start","setStart","end","setEnd","handleFetch","accessToken","localStorage","getItem","user","response","fetch","method","headers","data","json","console","log","error","consumersTable","all_rows","slice","map","row","index","children","consumer_number","fileName","_jsxFileName","lineNumber","columnNumber","file_key","className","onClick","_c","$RefreshReg$"],"sources":["/home/sudip/Docstorage-Frontend/src/Pages/Employee/History/History.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { backend_url } from \"../../../Components/configurations\";\n\nconst History = () => {\n    const [rowData, setRowData] = useState({});\n    const [start, setStart] = useState(0);\n    const [end,setEnd] = useState(10);\n\n    const handleFetch = async () => {\n        try {\n            const accessToken = localStorage.getItem('access_token');\n            const user = localStorage.getItem('user');\n\n            const response = await fetch(`${backend_url}user/account_status/?user=${user}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`,\n                }\n            });\n            const data = await response.json();\n            setRowData(data);\n            console.log(data); // Check fetched data\n        } catch (error) {\n            console.log('Error occurred', error);\n        }\n    };\n\n    useEffect(() => {\n        handleFetch(); // Call handleFetch when component mounts\n\n    }, []); // Empty dependency array ensures this effect runs only once after initial render\n\n    const consumersTable = rowData.all_rows && rowData.all_rows.slice(start,end).map((row,index) => (\n        <tr key={index}>\n            <td>{row.consumer_number}</td>\n            <td>{row.file_key}</td>\n        </tr>\n    ))\n\n    return (\n        <div>\n            {/* Render your component using rowData */}\n            <button className=\"btn btn-primary mt-5\" onClick={handleFetch}>GET DATA</button>\n        </div>\n    );\n};\n\nexport default History;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,GAAG,EAACC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEjC,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACxD,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAEzC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEjB,WAAY,6BAA4Be,IAAK,EAAC,EAAE;QAC5EG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAe,EAAG,UAASP,WAAY;QAC3C;MACJ,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCf,UAAU,CAACc,IAAI,CAAC;MAChBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,KAAK,CAAC;IACxC;EACJ,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZY,WAAW,CAAC,CAAC,CAAC,CAAC;EAEnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMc,cAAc,GAAGpB,OAAO,CAACqB,QAAQ,IAAIrB,OAAO,CAACqB,QAAQ,CAACC,KAAK,CAACpB,KAAK,EAACE,GAAG,CAAC,CAACmB,GAAG,CAAC,CAACC,GAAG,EAACC,KAAK,kBACvF5B,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAA6B,QAAA,EAAKF,GAAG,CAACG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9BlC,OAAA;MAAA6B,QAAA,EAAKF,GAAG,CAACQ;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,GAFlBN,KAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGV,CACP,CAAC;EAEF,oBACIlC,OAAA;IAAA6B,QAAA,eAEI7B,OAAA;MAAQoC,SAAS,EAAC,sBAAsB;MAACC,OAAO,EAAE5B,WAAY;MAAAoB,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEd,CAAC;AAAChC,EAAA,CA1CID,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}