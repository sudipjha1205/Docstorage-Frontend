{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anves\\\\sudip\\\\Docstorage-Frontend\\\\src\\\\Pages\\\\Signing\\\\registration.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Redirect } from 'react-router-dom';\nimport { backend_url } from \"../../Components/configurations\";\nimport \"./login.css\"; // Ensure that your CSS file is correctly linked\nimport show from \"../../Illustrations/show.png\";\nimport hide from \"../../Illustrations/hide.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [register_confirmpassword, setRegister_ConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [csrfToken, setCsrfToken] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch CSRF token from the server\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get(`${backend_url}/user/csrf_token/`);\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('Failed to fetch CSRF token', error);\n      }\n    };\n    fetchCsrfToken();\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleToggleConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleConfirmPassword = e => {\n    setRegister_ConfirmPassword(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValidEmail = emailRegex.test(formData['email']);\n    if (isValidEmail === false) {\n      alert('Please enter a valid Email ID');\n      setFormData({\n        email: '',\n        password: ''\n      });\n      setRegister_ConfirmPassword('');\n      return;\n    }\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n\n    // Check if the password matches the regex\n    const isValidPassword = passwordRegex.test(formData['password']);\n    if (isValidPassword === false) {\n      alert(\"Please give a valid password\");\n      setFormData({\n        email: formData['email'],\n        password: ''\n      });\n      setRegister_ConfirmPassword('');\n      return;\n    }\n    if (formData.password != register_confirmpassword) {\n      setError(\"Passwords don't match\");\n      alert(\"Password doesn't matches\");\n      return;\n    }\n\n    // Add the CSRF token to the headers\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrfToken\n    };\n    try {\n      console.log('Form Data:', formData);\n      console.log('Headers:', headers);\n      const response = await fetch(`${backend_url}user/registration/`, {\n        method: 'post',\n        headers: headers,\n        body: JSON.stringify(formData)\n      });\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(data);\n      if (response['statusText'] === \"OK\") {\n        alert(\"Registered Successfully\");\n        setFormData({\n          email: '',\n          password: ''\n        });\n        setRegister_ConfirmPassword('');\n      }\n    } catch (error) {\n      alert(error);\n      console.error('Registration failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-style\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"label-style\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-style\",\n        type: \"text\",\n        id: \"email\",\n        name: \"email\",\n        value: formData['email'],\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-style\",\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          className: \"input-style\",\n          id: \"password\",\n          name: \"password\",\n          value: formData['password'],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"password-button-style\",\n          type: \"button\",\n          onClick: handleTogglePassword,\n          children: showPassword ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: show,\n            alt: \"Show Password\",\n            width: \"20px\",\n            height: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hide,\n            alt: \"Hide Password\",\n            width: \"20px\",\n            height: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 97\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-style\",\n        htmlFor: \"register_confirmpassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showConfirmPassword ? 'text' : 'password',\n          className: \"input-style\",\n          id: \"register_confirmpassword\",\n          name: \"register_confirmpassword\",\n          value: register_confirmpassword,\n          onChange: handleConfirmPassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"password-button-style\",\n          type: \"button\",\n          onClick: handleToggleConfirmPassword,\n          children: showConfirmPassword ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: show,\n            alt: \"Show Password\",\n            width: \"20px\",\n            height: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hide,\n            alt: \"Hide Password\",\n            width: \"20px\",\n            height: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 104\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"pass-instruction\",\n        children: \"Password should contain an Uppercase, lowercase, number, special character and of length 8 least.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-style\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"R5M5V0I4EHpOLFnpb7jPpXUZQqo=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["axios","React","useState","useEffect","useNavigate","Redirect","backend_url","show","hide","jsxDEV","_jsxDEV","Registration","_s","password","setPassword","register_confirmpassword","setRegister_ConfirmPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","formData","setFormData","email","error","setError","csrfToken","setCsrfToken","navigate","fetchCsrfToken","response","get","data","console","handleTogglePassword","handleToggleConfirmPassword","handleChange","e","target","name","value","handleConfirmPassword","handleSubmit","preventDefault","emailRegex","isValidEmail","test","alert","passwordRegex","isValidPassword","headers","log","fetch","method","body","JSON","stringify","ok","Error","status","json","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","htmlFor","type","id","onChange","required","onClick","src","alt","width","height","_c","$RefreshReg$"],"sources":["C:/Users/anves/sudip/Docstorage-Frontend/src/Pages/Signing/registration.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate,Redirect } from 'react-router-dom';\r\nimport { backend_url } from \"../../Components/configurations\";\r\n\r\nimport \"./login.css\"; // Ensure that your CSS file is correctly linked\r\nimport show from \"../../Illustrations/show.png\";\r\nimport hide from \"../../Illustrations/hide.png\";\r\n\r\nconst Registration = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [register_confirmpassword, setRegister_ConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [csrfToken, setCsrfToken] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch CSRF token from the server\r\n    const fetchCsrfToken = async () => {\r\n      try {\r\n        const response = await axios.get(`${backend_url}/user/csrf_token/`);\r\n        setCsrfToken(response.data.csrfToken);\r\n      } catch (error) {\r\n        console.error('Failed to fetch CSRF token', error);\r\n      }\r\n    };\r\n\r\n    fetchCsrfToken();\r\n  }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n  const handleTogglePassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleToggleConfirmPassword = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleConfirmPassword = (e) => {\r\n    setRegister_ConfirmPassword(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const isValidEmail = emailRegex.test(formData['email']);\r\n\r\n    if (isValidEmail === false){\r\n      alert('Please enter a valid Email ID');\r\n      setFormData({email: '', password: ''});\r\n      setRegister_ConfirmPassword('');\r\n      return;\r\n    }\r\n\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n    // Check if the password matches the regex\r\n    const isValidPassword = passwordRegex.test(formData['password']);\r\n\r\n    if (isValidPassword === false){\r\n      alert(\"Please give a valid password\");\r\n      setFormData({email: formData['email'], password: ''});\r\n      setRegister_ConfirmPassword('');\r\n      return;\r\n    }\r\n\r\n    if (formData.password != register_confirmpassword){\r\n      setError(\"Passwords don't match\");\r\n      alert(\"Password doesn't matches\");\r\n      return\r\n    }\r\n\r\n    // Add the CSRF token to the headers\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      'X-CSRFToken': csrfToken,\r\n    };\r\n\r\n    try {\r\n      console.log('Form Data:', formData);\r\n      console.log('Headers:', headers);\r\n\r\n      const response = await fetch(`${backend_url}user/registration/`, {\r\n        method: 'post',\r\n        headers: headers,\r\n        body: JSON.stringify(formData),\r\n      });\r\n      console.log(response)\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      if (response['statusText'] === \"OK\"){\r\n        alert(\"Registered Successfully\");\r\n        setFormData({\r\n          email: '',\r\n          password: ''})\r\n        setRegister_ConfirmPassword('');\r\n      }\r\n    } catch (error) {\r\n      alert(error)\r\n      console.error('Registration failed', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Registration Form</h3>\r\n      <form className=\"form-style\">\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <label htmlFor=\"email\" className=\"label-style\">\r\n          Email:\r\n        </label>\r\n        <input className=\"input-style\" type=\"text\" id=\"email\" name=\"email\" value={formData['email']} onChange={handleChange} required />\r\n\r\n        <label className=\"label-style\" htmlFor=\"password\">\r\n          Password:\r\n        </label>\r\n        <div className=\"password-toggle\">\r\n          <input type={showPassword ? 'text' : 'password'} className=\"input-style\" id=\"password\" name=\"password\" value={formData['password']} onChange={handleChange} required />\r\n          <button className=\"password-button-style\" type=\"button\" onClick={handleTogglePassword}>\r\n            {showPassword ? <img src={show} alt=\"Show Password\" width='20px' height='20px' /> : <img src={hide} alt=\"Hide Password\" width='20px' height='20px' />}\r\n          </button>\r\n        </div>\r\n        <label className=\"label-style\" htmlFor=\"register_confirmpassword\">\r\n          Confirm Password:\r\n        </label>\r\n        <div className=\"password-toggle\">\r\n          <input type={showConfirmPassword ? 'text' : 'password'} className=\"input-style\" id=\"register_confirmpassword\" name=\"register_confirmpassword\" value={register_confirmpassword} onChange={handleConfirmPassword} required />\r\n          <button className=\"password-button-style\" type=\"button\" onClick={handleToggleConfirmPassword}>\r\n            {showConfirmPassword ? <img src={show} alt=\"Show Password\" width='20px' height='20px' /> : <img src={hide} alt=\"Hide Password\" width='20px' height='20px' />}\r\n          </button>\r\n        </div>\r\n        <label className=\"pass-instruction\">Password should contain an Uppercase, lowercase, number, special character and of length 8 least.</label>\r\n        <button type=\"submit\" className=\"button-style\" onClick={handleSubmit}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}